@startuml Binary Format Read Sequence
!theme plain
title Binary File Format - Read/Restore Process

actor User
participant "Pipeline Manager" as PM
participant "File Reader" as FR
participant "Metadata Parser" as MP
participant "Decryption Stage" as DS
participant "Decompression Stage" as DCS
participant "File Writer" as FW
participant "Input File" as IF
participant "Output File" as OF

User -> PM: restore_file(input.adapipe, output.txt)
activate PM

PM -> FR: open_input_file(input.adapipe)
activate FR

== Footer Reading Phase ==
FR -> IF: seek_to_end()
FR -> IF: read_last_8_bytes()
IF -> FR: magic_bytes
FR -> FR: verify_magic_bytes("ADAPIPE\0")

FR -> IF: read_previous_2_bytes()
IF -> FR: format_version
FR -> FR: validate_format_version(1)

FR -> IF: read_previous_4_bytes()
IF -> FR: header_length

FR -> IF: seek_back(header_length)
FR -> IF: read_json_header(header_length)
IF -> FR: json_header_bytes

FR -> MP: parse_header(json_header_bytes)
activate MP
MP -> MP: deserialize_json()
MP -> MP: validate_header_structure()
MP -> FR: file_metadata
deactivate MP

== Validation Phase ==
FR -> FR: verify_output_checksum(entire_file)
FR -> PM: metadata + validation_result

== Chunk Processing Phase ==
PM -> FR: seek_to_beginning()

loop for each chunk (metadata.chunk_count times)
    FR -> IF: read_chunk_header()
    IF -> FR: nonce (12 bytes)
    IF -> FR: data_length (4 bytes)
    
    FR -> IF: read_encrypted_data(data_length)
    IF -> FR: encrypted_chunk_data
    
    PM -> DS: decrypt_chunk(nonce, encrypted_data, metadata)
    activate DS
    DS -> DS: apply_aes256gcm_decryption()
    DS -> PM: decrypted_chunk
    deactivate DS
    
    PM -> DCS: decompress_chunk(decrypted_chunk, metadata)
    activate DCS
    DCS -> DCS: apply_brotli_decompression()
    DCS -> PM: original_chunk
    deactivate DCS
    
    PM -> FW: write_original_chunk(original_chunk)
    activate FW
    FW -> OF: original_data
    deactivate FW
end

== Final Validation Phase ==
PM -> PM: calculate_restored_checksum()
PM -> PM: verify_against_original_checksum(metadata)
PM -> PM: verify_file_size(metadata.original_size)

PM -> User: RestorationResult
deactivate PM
deactivate FR

note right of OF
Restored file matches 
original exactly:
- Same filename
- Same size  
- Same SHA256 checksum
end note

@enduml
